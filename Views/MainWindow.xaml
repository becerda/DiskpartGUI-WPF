<local:BaseClosableWindow 
        x:Class="DiskpartGUI.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DiskpartGUI.Views"
        xmlns:helper="clr-namespace:DiskpartGUI.Helpers"
        mc:Ignorable="d"
        Title="Distpart GUI" 
        SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanMinimize">

    <Window.Resources>
        <helper:BooleanOrConverter x:Key ="BooleanOrConverter"/>
    </Window.Resources>

    <!-- Window Context Menu (Right Click) -->
    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem Command="{Binding ChangeMountStateCommand}" CommandParameter="{Binding SelectedItem}" Header="{Binding EjectMountButtonContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" InputGestureText="{Binding ChangeMountStateCommand.InputGestureText}"/>
            <MenuItem Command="{Binding RenameCommand}" CommandParameter="{Binding SelectedItem}" Header="Rename" InputGestureText="{Binding RenameCommand.InputGestureText}"/>
            <MenuItem Command="{Binding FormatCommand}" CommandParameter="{Binding SelectedItem}" Header="Format" InputGestureText="{Binding FormatCommand.InputGestureText}"/>
            <MenuItem Command="{Binding ReadOnlyCommand}" CommandParameter="{Binding SelectedItem}" Header="{Binding SetClearReadOnlyButtonContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" InputGestureText="{Binding ReadOnlyCommand.InputGestureText}"/>
            <Separator/>
            <MenuItem Command="{Binding BitLockCommand}" Header="Open BitLock" InputGestureText="{Binding BitLockCommand.InputGestureText}"/>
            <MenuItem Command="{Binding RefreshCommand}" Header="Refresh" InputGestureText="{Binding RefreshCommand.InputGestureText}"/>
            <Separator/>
            <MenuItem Command="{Binding ShowVolumesCommand}" CommandParameter="Volume" Header="Show Volumes"/>
            <MenuItem Command="{Binding ShowDisksCommand}" CommandParameter="Disk" Header="Show Disks"/>
            <MenuItem Command="{Binding ShowPartitionsCommand}" CommandParameter="Partition" Header="Show Partitions"/>
        </ContextMenu>
    </Window.ContextMenu>

    <!-- Window Hot Keys -->
    <Window.InputBindings>
        <KeyBinding Command="{Binding ChangeMountStateCommand}" Key="{Binding ChangeMountStateCommand.KeyGesture}" Modifiers="{Binding ChangeMountStateCommand.GestureModifier}"/>
        <KeyBinding Command="{Binding RenameCommand}" Key="{Binding RenameCommand.KeyGesture}" Modifiers="{Binding RenameCommand.GestureModifier}"/>
        <KeyBinding Command="{Binding FormatCommand}" Key="{Binding FormatCommand.KeyGesture}" Modifiers="{Binding FormatCommand.GestureModifier}"/>
        <KeyBinding Command="{Binding ReadOnlyCommand}" Key="{Binding ReadOnlyCommand.KeyGesture}" Modifiers="{Binding ReadOnlyCommand.GestureModifier}"/>
        <KeyBinding Command="{Binding BitLockCommand}" Key="{Binding BitLockCommand.KeyGesture}" Modifiers="{Binding BitLockCommand.GestureModifier}"/>
        <KeyBinding Command="{Binding RefreshCommand}" Key="{Binding RefreshCommand.KeyGesture}" Modifiers="{Binding RefreshCommand.GestureModifier}"/>
        <KeyBinding Command="{Binding CloseWindowCommand}" Key="{Binding CloseWindowCommand.KeyGesture}" Modifiers="{Binding CloseWindowCommand.GestureModifier}"/>
        <KeyBinding Command="{Binding ShowAllVolumesCommand}" Key="{Binding ShowAllVolumesCommand.KeyGesture}" Modifiers="{Binding ShowAllVolumesCommand.GestureModifier}"/>
        <KeyBinding Command="{Binding AboutCommand}" Key="{Binding AboutCommand.KeyGesture}" Modifiers="{Binding AboutCommand.GestureModifier}"/>
        <KeyBinding Command="{Binding ShowVolumesCommand}" CommandParameter="Volume" Key="{Binding ShowVolumesListViewCommand.KeyGesture}" Modifiers="{Binding ShowVolumesListViewCommand.GestureModifier}"/>
        <KeyBinding Command="{Binding ShowDisksCommand}" CommandParameter="Disk" Key="{Binding ShowDisksListViewCommand.KeyGesture}" Modifiers="{Binding ShowDisksListViewCommand.GestureModifier}"/>
        <KeyBinding Command="{Binding ShowPartitionsCommand}" CommandParameter="Partition" Key="{Binding ShowPartitionsCommand.KeyGesture}" Modifiers="{Binding ShowPartitionsCommand.GestureModifier}"/>
    </Window.InputBindings>

    <Grid>
        <DockPanel VerticalAlignment="Top">

            <!-- Window Menu Bar -->
            <Menu DockPanel.Dock="Top" VerticalAlignment="Top">
                <MenuItem Header="_File">
                    <MenuItem Name="MenuItemExit" Header="_Exit" InputGestureText="{Binding CloseWindowCommand.InputGestureText}" Command="{Binding CloseWindowCommand}"/>
                </MenuItem>
                <MenuItem Header="_Edit">
                    <MenuItem Command="{Binding ChangeMountStateCommand}" Header="{Binding EjectMountButtonContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" InputGestureText="{Binding ChangeMountStateCommand.InputGestureText}"/>
                    <MenuItem Command="{Binding RenameCommand}" Header="Rename" InputGestureText="{Binding RenameCommand.InputGestureText}"/>
                    <MenuItem Command="{Binding FormatCommand}" Header="Format" InputGestureText="{Binding FormatCommand.InputGestureText}"/>
                    <MenuItem Command="{Binding ReadOnlyCommand}" Header="{Binding SetClearReadOnlyButtonContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" InputGestureText="{Binding ReadOnlyCommand.InputGestureText}"/>
                    <Separator/>
                    <MenuItem Command="{Binding RefreshCommand}" Header="Refresh" InputGestureText="{Binding RefreshCommand.InputGestureText}"/>
                </MenuItem>
                <MenuItem Header="_View">
                    <MenuItem Command="{Binding ShowAllVolumesCommand}" Header="_Show All Volumes" IsChecked="{Binding ShowAllVolumes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" InputGestureText="{Binding ShowAllVolumesCommand.InputGestureText}"/>
                    <Separator/>
                    <MenuItem Command="{Binding ShowVolumesListViewCommand}" CommandParameter="Volume" Header="Show Volumes"/>
                    <MenuItem Command="{Binding ShowDisksListViewCommand}" CommandParameter="Disk" Header="Show Disks"/>
                    <MenuItem Command="{Binding ShowPartitionCommand}" CommandParameter="Partition" Header="Show Partitions"/>
                    <Separator/>
                    <MenuItem Command="{Binding BitLockCommand}" Header="Open BitLock" InputGestureText="{Binding BitLockCommand.InputGestureText}"/>
                </MenuItem>
                <MenuItem Header="_Help">
                    <MenuItem Command="{Binding AboutCommand}" Header="_About" InputGestureText="{Binding AboutCommand.InputGestureText}"/>
                    <Separator/>
                    <MenuItem Name="MenuItemAutoCheckForUpdates" Header="Auto Check For _Updates"/>
                </MenuItem>
            </Menu>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Selected Media Item Name -->
                <Label Content="{Binding SelectedItemInfo}" Margin="10,0,0,0" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" />

                <!-- List View -->
                <ListView Name="ListView" Margin="10,5,10,10" Width="650" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True"
                          Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6" Height="200" ItemsSource="{Binding ListViewSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding SelectedIndex, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">
                    <ListView.Resources>
                        <Style TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        </Style>
                    </ListView.Resources>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn x:Name="GridViewColumnParentDisk" Header="Disk" DisplayMemberBinding="{Binding Parent}" Width="40">
                                <helper:GridViewColumnVisibilityManager.IsVisible>
                                    <MultiBinding Converter="{StaticResource BooleanOrConverter}">
                                        <Binding Path="VolumeVisibility" UpdateSourceTrigger="PropertyChanged"/>
                                        <Binding Path="PartitionVisibility" UpdateSourceTrigger="PropertyChanged"/>
                                    </MultiBinding>
                                </helper:GridViewColumnVisibilityManager.IsVisible>
                            </GridViewColumn>
                            <GridViewColumn x:Name="GridViewColumnNumber" Header="#" DisplayMemberBinding="{Binding Number}" Width="25"/>

                            <!-- Volume View -->
                            <GridViewColumn x:Name="GridViewColumnVolumeLetter" Header="Letter" helper:GridViewColumnVisibilityManager.IsVisible="{Binding VolumeVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding DriveLetter}"  Width="40"/>
                            <GridViewColumn x:Name="GridViewColumnVolumeLabel" Header="Label" helper:GridViewColumnVisibilityManager.IsVisible="{Binding VolumeVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding Name}" Width="90"/>
                            <GridViewColumn x:Name="GridViewColumnVolumeFileSystem" Header="File System" helper:GridViewColumnVisibilityManager.IsVisible="{Binding VolumeVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding FileSystem}" Width="70"/>
                            <GridViewColumn x:Name="GridViewColumnVolumeType" Header="Type" helper:GridViewColumnVisibilityManager.IsVisible="{Binding VolumeVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding Type}" Width="80"/>
                            <GridViewColumn x:Name="GridViewColumnVolumeSize" Header="Size" helper:GridViewColumnVisibilityManager.IsVisible="{Binding VolumeVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding FullSize}" Width="70"/>
                            <GridViewColumn x:Name="GridViewColumnVolumeStatus" Header="Status" helper:GridViewColumnVisibilityManager.IsVisible="{Binding VolumeVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding Status}" Width="70"/>
                            <GridViewColumn x:Name="GridViewColumnVolumeInfo" Header="Info" helper:GridViewColumnVisibilityManager.IsVisible="{Binding VolumeVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding Info}" Width="70"/>

                            <!-- Disk View -->
                            <GridViewColumn x:Name="GridViewColumnDiskStatus" Header="Status" helper:GridViewColumnVisibilityManager.IsVisible="{Binding DiskVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding Status}" Width="70"/>
                            <GridViewColumn x:Name="GridViewColumnDiskSize" Header="Size" helper:GridViewColumnVisibilityManager.IsVisible="{Binding DiskVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding FullSize}" Width="70"/>
                            <GridViewColumn x:Name="GridViewColumnDiskFree" Header="Free Space" helper:GridViewColumnVisibilityManager.IsVisible="{Binding DiskVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding FullFreeSpace}" Width="70"/>
                            <GridViewColumn x:Name="GridViewColumnDiskDyn" Header="Dynamic" helper:GridViewColumnVisibilityManager.IsVisible="{Binding DiskVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding DiskType}" Width="90"/>
                            <GridViewColumn x:Name="GridViewColumnDiskGUID" Header="GPT" helper:GridViewColumnVisibilityManager.IsVisible="{Binding DiskVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding GPTType}" Width="70"/>

                            <!-- Partition View -->
                            <GridViewColumn x:Name="GridViewColumnPartitionType" Header="Type" helper:GridViewColumnVisibilityManager.IsVisible="{Binding PartitionVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding PartitionType}"  Width="80"/>
                            <GridViewColumn x:Name="GridViewColumnPartitionSize" Header="Size" helper:GridViewColumnVisibilityManager.IsVisible="{Binding PartitionVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding FullSize}"  Width="70"/>
                            <GridViewColumn x:Name="GridViewColumnPartitionOffset" Header="Offset" helper:GridViewColumnVisibilityManager.IsVisible="{Binding PartitionVisibility, UpdateSourceTrigger=PropertyChanged}" DisplayMemberBinding="{Binding FullOffset}"  Width="70"/>

                            <GridViewColumn x:Name="GridViewColumnAttributes" Header="Attributes" DisplayMemberBinding="{Binding Attributes}" Width="200">
                                <helper:GridViewColumnVisibilityManager.IsVisible>
                                    <MultiBinding Converter="{StaticResource BooleanOrConverter}">
                                        <Binding Path="VolumeVisibility" UpdateSourceTrigger="PropertyChanged"/>
                                        <Binding Path="DiskVisibility" UpdateSourceTrigger="PropertyChanged"/>
                                    </MultiBinding>
                                </helper:GridViewColumnVisibilityManager.IsVisible>
                            </GridViewColumn>

                        </GridView>
                    </ListView.View>
                </ListView>

                <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Eject Button -->
                    <Button Name="ButtonEject" Content="{Binding EjectMountButtonContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,0,5,5" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Width="100" Command="{Binding ChangeMountStateCommand}" CommandParameter="{Binding SelectedItem}"/>

                    <!-- Rename Button -->
                    <Button Name="ButtonRename" Content="Rename" Margin="5,0,5,5" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Width="100" Command="{Binding RenameCommand}" CommandParameter="{Binding SelectedItem}"/>

                    <!-- Format Button -->
                    <Button Name="ButtonFormat" Content="Format" Margin="5,0,5,5" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Width="100" Command="{Binding FormatCommand}" CommandParameter="{Binding SelectedItem}"/>

                    <!-- Read Only Button -->
                    <Button Name="ButtonReadOnly" Content="{Binding SetClearReadOnlyButtonContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,5,5" Grid.Row="0" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Width="100" Command="{Binding ReadOnlyCommand}" CommandParameter="{Binding SelectedItem}"/>

                    <!-- BitLock Button -->
                    <Button Name="ButtonBitlock" Content="BitLock" Margin="5,0,5,5" Grid.Row="0" Grid.Column="4" VerticalAlignment="Center" Command="{Binding BitLockCommand}" HorizontalAlignment="Center" Width="100"/>

                    <!-- Refresh Button -->
                    <Button Name="ButtonRefresh" Content="Refresh" Margin="5,0,10,5" Grid.Row="0" Grid.Column="5" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Width="100" Command="{Binding RefreshCommand}"/>

                </Grid>
            </Grid>

        </DockPanel>
    </Grid>
</local:BaseClosableWindow>
